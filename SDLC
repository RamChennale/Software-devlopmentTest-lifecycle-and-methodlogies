Software-devlopmentTest-lifecycle-and-methodlogies (SDLC)

REQUIREMT=> 
     FEASIBILITY STUDY=>
           DESIGN=>
                CODING=>
                     TESTING=>
                          DEPLOYMENT=>
                                MAINTENANCE

The Software Development Lifecycle is a systematic process for building software that ensures the quality and correctness of the 
software built. SDLC process aims to produce high-quality software which meets customer expectations. 
The software development should be complete in the pre-defined time frame and cost.

Why SDLC?

Here, are prime reasons why SDLC is important for developing a software system.

•	It offers a basis for project planning, scheduling, and estimating.
•	Provides a framework for a standard set of activities and deliverables.
•	It is a mechanism for project tracking and control.
•	Increases visibility of project planning to all involved stakeholders of the development process.
•	Increased and enhance development speed

SDLC Phases
The entire SDLC process divided into the following stages:
 
•	Phase 1: Requirement analysis
•	Phase 2: Feasibility study
•	Phase 3: Design
•	Phase 4: Coding
•	Phase 5: Testing
•	Phase6: Deployment/Installation
•	Phase 7: Maintenance



Phase 1:   Requirement collection and analysis:
It is conducted by the senior team members collecting inputs from all the customer/stakeholders and domain experts in the industry.
Requirements Gathering stage need teams to get detailed and precise requirements. This helps companies to finalize the necessary 
timeline to finish the work of that system.

Phase 2:  Feasibility study: 
Here the inputs/requirements are getting approved from client and 'Software Requirement Specification (SRS) document created
Once the requirement analysis phase is completed the next step is to define and document software needs. This process conducted with the
help of document also known as 'SRS' document. It includes everything which should be designed 'Software Requirement Specification' and 
developed during the project life cycle.
There are mainly five types of feasibilities checks:
  •	Economic: Can we complete the project within the budget or not?
  •	Legal: Can we handle this project as cyber law and other regulatory framework/compliances
  •	Operation feasibility: Can we create operations which are expected by the client?
  •	Technical: Need to check whether the current computer system can support the software
  •	Schedule: Decide that the project can be completed within the given schedule or not.

Phase 3: Design:
Software design documents are prepared as per the software requirement specification document. This helps define overall system 
architecture.
There are two kinds of design documents developed in this phase:
High-Level Design (HLD)
  •	Brief description and name of each module
  •	An outline about the functionality of every module
  •	Interface relationship and dependencies between modules
  •	Database tables identified along with their key elements
  •	Complete architecture diagrams along with technology details
Low-Level Design (LLD)
  •	Functional logic of the modules
  •	Database tables, which include type and size
  •	Complete detail of the interface
  •	Addresses all types of dependency issues
  •	Listing of error messages
  •	Complete input and outputs for every module

Phase 4: Coding:
Once the system design phase is over, the next phase is coding. In this phase, developers start build the entire system by writing code
using the chosen programming language. In this phase, Developer needs to follow certain predefined coding guidelines. 
They also need to use programming tools like compiler, interpreters, debugger to generate and implement the code.

Phase 5: Testing:
Once the software is complete, and it is deployed in the testing environment. The testing team starts testing the functionality of the
entire system. This is done to verify that the entire application works according to the customer requirement.
During this phase, QA and testing team may find some bugs/defects which they communicate to developers. The development team fixes the 
bug and sends back to QA for a re-test. This process continues until the software is bug-free, stable, and working according to the 
business needs of that system.

Phase 6: Installation/Deployment:
Once the software testing phase is over and no bugs or error free in the system then the final deployment process starts. Based on the 
feedback given by the project manager, the final software is released and checked for deployment issues if any.

Phase 7: Maintenance:
Once the system is deployed, and customers start using the developed system, following 3 activities occur
  •	Bug fixing - bugs are reported because of some scenarios which are not tested at all
  •	Upgrade - Upgrading the application to the newer versions of the Software
  •	Enhancement - Adding some new features into the existing software

The main focus of this SDLC phase is to ensure that needs continue to be met and that the system continues to perform as per the 
specification mentioned in the first phase.
























Phase 1: Requirement collection and analysis:
All the input requirements collecting from all the customer/stakeholders and domain experts in the industry by senior team members and BA, PM.
Requirements Gathering stage need teams to get detailed and precise requirements. 
Phase 2: Feasibility study: Here the inputs/requirements are getting approved from client and 'Software Requirement Specification (SRS) document created
There are mainly five types of feasibilities checks:
•	Economic: Can we complete the project within the budget or not?
•	Legal: Can we handle this project as cyber law and other regulatory framework/compliances
•	Operation feasibility: Can we create operations which are expected by the client?
•	Technical: Need to check whether the current computer system can support the software
•	Schedule: Decide that the project can be completed within the given schedule or not.
Phase 3: Design:
Software design documents are prepared as per the software requirement specification document. 
High-Level Design (HLD)
•	Brief description and name of each module
•	An outline about the functionality of every module
•	Interface relationship and dependencies between modules
•	Database tables identified along with their key elements
•	Complete architecture diagrams along with technology details
Low-Level Design (LLD)
•	Functional logic of the modules
•	Database tables, which include type and size
•	Complete detail of the interface
•	Addresses all types of dependency issues
•	Listing of error messages
•	Complete input and outputs for every module
Phase 4: Coding:
After design phase is over Developers start build the entire system by writing code using the chosen programming language. 
Phase 5: Testing:
The testing team starts testing the functionality of the entire system. This is done to verify that the entire application works according to the customer requirement.
Phase 6: Installation/Deployment:
Testing phase is over then final software is released and checked for deployment issues if any.
Phase 7: Maintenance:
Once the system is deployed, and customers start using the developed system, following 3 activities occur
•	Bug fixing - bugs are reported because of some scenarios which are not tested at all
•	Upgrade - Upgrading the application to the newer versions of the Software
•	Enhancement - Adding some new features into the existing software
The main focus of this SDLC phase is to ensure that needs continue to be met and that the system continues to perform as per the specification mentioned in the first phase.





